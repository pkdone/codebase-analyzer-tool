Code Organization: Act as a senior programmer analyzing the code in a TypeScript application where the content of each file in the application's codebase is shown below in a code block. Identify the top 10 parts of the codebase are not well-organized, and highlight which files contain multiple unrelated functions. Provide references to the specific part(s) of the code that needs these improvements with suggestions on how to improve. Include the list or relative file paths of each source file affected.

Do NOT inlude any of the following topics in your recommendations:

 * Overly Broad and Confusing Environment Configuration
 * Ambiguous "Task" Layer and Component Placement
 * Monolithic Repository Implementation
 * Redundant Documentation Files (`AGENTS.md` and `GEMINI.md`)
 * Consolidate CLI Entry Points
 * Unclear Separation in `llm/providers` Subdirectories
 * Consolidation of responsity data model with schemas data model
 * Monolithic Schema Definition File
 * Overly Granular Utility Files in `common/utils`
 * Simplify Entry Points with Top-Level `await`
 * Misplaced `DatabaseInitializer` Component  